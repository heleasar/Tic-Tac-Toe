#include <iostream>
#include <vector>

using namespace std;

// Function to print the Tic Tac Toe board
void printBoard(const vector<vector<char>>& board) {
    cout << "  1 2 3" << endl;
    for (int i = 0; i < 3; ++i) {
        cout << i + 1 << " ";
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

// Function to check if a player has won
bool checkWin(const vector<vector<char>>& board, char player) {
    // Check rows
    for (int i = 0; i < 3; ++i) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
            return true;
        }
    }

    // Check columns
    for (int j = 0; j < 3; ++j) {
        if (board[0][j] == player && board[1][j] == player && board[2][j] == player) {
            return true;
        }
    }

    // Check diagonals
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }

    return false;
}

int main() {
    // Initialize the board
    vector<vector<char>> board(3, vector<char>(3, ' '));
    bool player1Turn = true;
    int movesLeft = 9;

    // Game loop
    while (movesLeft > 0) {
        // Print the board
        printBoard(board);

        // Determine current player
        char currentPlayer = player1Turn ? 'X' : 'O';
        cout << "Player " << currentPlayer << ", enter your move (row column): ";

        // Get player input
        int row, col;
        cin >> row >> col;

        // Validate input
        if (row < 1 || row > 3 || col < 1 || col > 3 || board[row - 1][col - 1] != ' ') {
            cout << "Invalid move. Try again." << endl;
            continue;
        }

        // Make the move
        board[row - 1][col - 1] = currentPlayer;

        // Check for a win
        if (checkWin(board, currentPlayer)) {
            printBoard(board);
            cout << "Player " << currentPlayer << " wins!" << endl;
            break;
        }

        // Toggle player turn
        player1Turn = !player1Turn;
        --movesLeft;
    }

    // If no one wins after all moves, it's a draw
    if (movesLeft == 0) {
        printBoard(board);
        cout << "It's a draw!" << endl;
    }

    return 0;
}
